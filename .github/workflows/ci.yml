name: Continuous Integration

on:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[dev]"
          python -m pip install tox-gh-actions==2.12.0
      - name: Run tests
        run: tox

  test_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[dev, docs]"
          sudo apt-get install graphviz
      - name: Test if docs can be built
        run: tox -e docs

  approve_resonance_tests:
      needs: [test]
      runs-on: ubuntu-latest
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == true
      environment: resonance-test
      steps:
        - name: Approve
          run: echo "Approved!"

  resonance_integration_test:
    needs: [test, approve_resonance_tests]
    if: |
      always() &&
      (needs.test.result == 'success') &&
      (needs.approve_resonance_tests.result == 'success' ||
       (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) ||
       github.event_name == 'schedule' ||
       github.event_name == 'workflow_dispatch')
    runs-on: ${{ matrix.platform }}
    environment: resonance-test
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.9', '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e ".[dev]"
          python -m pip install tox-gh-actions==2.12.0
      - name: Run Resonance example integration test
        run: tox -e test_resonance_example
        env:
          RESONANCE_API_KEY: ${{ environments.resonance-test.secrets.RESONANCE_API_KEY }}
